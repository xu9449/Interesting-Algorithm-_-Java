Time: push O(n) pop O(1) size O(1)
Space: push O(n) pop (1) size O(1)
我们用了 linked list 实现




import java.util.LinkedList;
import java.util.Queue;

public class TwoQueueStack {
    public static void main (String[] args) {
        Stack s = new Stack();
        s.push(1);
        s.push(2);
        s.push(3);
        System.out.println("size" + s.size());
        System.out.println(s.top());
        s.pop();
        System.out.println(s.top());
        s.pop();
        System.out.println(s.top());
        System.out.println("size" +s.size());
    }

    static class Stack {
        static Queue<Integer> q1 = new LinkedList<Integer>();
        static Queue<Integer> q2 = new LinkedList<Integer>();

        static int cur_size;

        Stack() {
            cur_size = 0;
        }

        public void push(int x) {
            cur_size++;
            q2.add(x);

            while (!q1.isEmpty()) {
                q2.add(q1.peek());
                q1.remove();
            }

            Queue<Integer> q = q1;
            q1 = q2;
            q2 = q;
        }

        static void pop() {
            if (q1.isEmpty())
                return;
            q1.remove();
            cur_size --;
        }

        static int top() {
            if (q1.isEmpty()) {
                return -1;
            }
            return q1.peek();
        }

        static int size() {
            return cur_size;
        }
    }
}
